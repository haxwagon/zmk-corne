/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | RET |   | SPC | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1   &kp RET   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | CTRL |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     | ESC  |
//                    | GUI |     | ENT |   | SPC |     | ALT |
                        bindings = <
   &kp GRAVE &kp N1 &kp N2 &kp N3   &kp N4 &kp N5    &kp N6    &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &kp LCTRL &trans &trans &trans   &trans &trans    &kp LEFT  &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT &trans &trans &trans   &trans &trans    &trans    &trans   &trans &trans    &trans &kp ESC
                           &kp LGUI &trans &kp RET   &kp SPACE &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |  \  |  -  |  +  |  _  |  =  |   |     |     |     |     |     |      |
// | SHFT | '|' |  [  |  ]  |  {  |  }  |   |     |     |     |     |     | ESC  |
//                    | GUI |     | ENT |   | SPC |     | ALT |
                        bindings = <
   &kp TILDE &kp EXCL &kp AT    &kp HASH &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &kp BSLH &kp MINUS &kp PLUS &kp UNDER &kp EQUAL   &trans    &trans   &trans          &trans   &trans   &trans
   &kp LSHFT &kp PIPE &kp LBKT  &kp RBKT &kp LBRC  &kp RBRC    &trans    &trans   &trans          &trans   &trans   &kp ESC
                    	        &kp LGUI &trans    &kp RET     &kp SPACE &trans   &kp RALT
                        >;

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |  TAB | F1  | F2  | F3  | F4  | F5  |   | F6    | F7  | F8  | F9  | F10 | BTCLR |
// | CTRL | F11 | F12 | F13 | F14 | F15 |   | BTTOG | BT1 | BT2 | BT3 | BT4 | BT5   |
// | SHFT |     |     |     |     |     |   |       |     |     |     |     | ESC   |
//                    | GUI |     | ENT |   | SPC   |     | ALT |
                        bindings = <
   &kp  TAB  &kp F1  &kp F2  &kp F3   &kp F4  &kp F5    &kp F6       &kp F7       &kp F8       &kp F9       &kp F10      &bt BT_CLR
   &kp LCTRL &kp F11 &kp F12 &kp F13  &kp F14 &kp F15   &out OUT_TOG &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 
   &kp LSHFT &trans  &trans  &trans   &trans  &trans    &trans       &trans       &trans       &trans       &trans       &kp ESC 
                    	     &kp LGUI &trans  &kp RET   &kp SPACE    &trans       &kp RALT
                        >;
                };
        };
};
